apply plugin: 'com.android.library'

android {
    compileSdkVersion configuration.compileSdk
    buildToolsVersion configuration.buildTools

    defaultConfig {
        minSdkVersion configuration.minSdk
        targetSdkVersion configuration.targetSdk
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "environment"

    productFlavors {
        mock {
            buildConfigField "String", "API_BASE_URL", "\"\""
        }
        prod {
            buildConfigField "String", "API_BASE_URL", "\"http://ws3.tramtracker.com.au\""
        }
    }

    // filter out mockRelease, stagingRelease and prodDebug builds.
    android.variantFilter { variant ->
        variant.getFlavors().each { flavor ->
            if (flavor.name == 'prod' && variant.buildType.name == 'debug' ||
                    flavor.name != 'prod' && variant.buildType.name == 'release') {
                variant.setIgnore(true)
            }
        }
    }
}

dependencies {
    implementation project(path: ':domain')

    mockApi project(path: ':remote-api-mock')
    prodApi project(path: ':remote-api-real')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${library.kotlin}"

    // rx
    implementation "io.reactivex.rxjava2:rxjava:${library.rxJava}"
    implementation "io.reactivex.rxjava2:rxkotlin:${library.rxKotlin}"

    // rxlint
    debugImplementation "nl.littlerobots.rxlint:rxlint:${library.rxLint}"

    // timber
    implementation "com.jakewharton.timber:timber:${library.timber}"

    // Koin
    implementation "org.koin:koin-android:${library.koin}"
    implementation "org.koin:koin-core-ext:${library.koin}"

    // Unit tests
    testImplementation project(path: ':core-infra-testing')
    testImplementation "junit:junit:${library.junit}"
    testImplementation "io.mockk:mockk:${library.mockk}"
    testImplementation "org.amshove.kluent:kluent:${library.kluent}"
}
